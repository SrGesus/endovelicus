//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(
  Clone,
  Debug,
  PartialEq,
  DeriveEntityModel,
  Eq,
  Serialize,
  Deserialize,
  endovelicus_macros :: OptionalModel,
)]
#[sea_orm(table_name = "account")]
pub struct Model {
  #[sea_orm(column_name = "_id", primary_key)]
  #[serde(skip)]
  pub id: i32,
  pub name: String,
  pub r#type: String,
  pub currency: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(
    belongs_to = "super::currency::Entity",
    from = "Column::Currency",
    to = "super::currency::Column::Code",
    on_update = "NoAction",
    on_delete = "NoAction"
  )]
  Currency,
}

impl Related<super::currency::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::Currency.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
